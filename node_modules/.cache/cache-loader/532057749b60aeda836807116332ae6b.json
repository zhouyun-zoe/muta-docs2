{"remainingRequest":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/docs2/muta-docs2/docs/docs_zh/js_sdk.md","dependencies":[{"path":"/Users/Yun/Desktop/docs2/muta-docs2/docs/docs_zh/js_sdk.md","mtime":1592902504770},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/.docusaurus/docusaurus-plugin-content-docs/site-docs-docs-zh-js-sdk-md-69e.json","mtime":1592902686127},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/Desktop/docs2/muta-docs2/docs/docs_zh/js_sdk.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'js_sdk',\n\ttitle: 'JS-SDK'\n};\nexport const metadata = {\n  \"id\": \"docs_zh/js_sdk\",\n  \"title\": \"JS-SDK\",\n  \"description\": \"# JS-SDK\",\n  \"source\": \"@site/docs/docs_zh/js_sdk.md\",\n  \"permalink\": \"/muta-docs2/docs/docs_zh/js_sdk\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta-docs/docs/docs_zh/js_sdk.md\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"GraphQL\",\n    \"permalink\": \"/muta-docs2/docs/docs_zh/graphql\"\n  },\n  \"next\": {\n    \"title\": \"FAQ\",\n    \"permalink\": \"/muta-docs2/docs/docs_zh/faq\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: '写在前面',\n  id: '写在前面',\n  children: []\n}, {\n  value: 'Install',\n  id: 'install',\n  children: []\n}, {\n  value: 'Modules in SDK',\n  id: 'modules-in-sdk',\n  children: []\n}, {\n  value: 'Examples',\n  id: 'examples',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"js-sdk\"\n    }}>{`JS-SDK`}</h1>\n    <p>{`JS-SDK 是官方推出的基于 JavaScript 的 SDK。用于与 Muta RPC 进行交互的一系列工具。 如果你熟悉以太坊，那么可以将这个 SDK 类比于 web3.js。`}</p>\n    <h2 {...{\n      \"id\": \"写在前面\"\n    }}>{`写在前面`}</h2>\n    <p>{`为了使我们不会迷惑，在开始之前需要了解一些基本的概念。当然，如果已经很熟悉 Muta ，那么请直接跳过这个部分吧。`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/muta-docs2/docs/docs_zh/built_in_service\"\n        }}>{`Service`}</a>{`: Muta 提供的各种服务由 Service 暴露`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://graphql.org\"\n        }}>{`GraphQL`}</a>{`: Muta 的 RPC 服务由GraphQL 提供，虽然名字带有 QL(Query Language)，但它是拥有 mutation 能力的`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.typescriptlang.org/\"\n        }}>{`TypeScript`}</a>{`: 一种 JavaScript 的超集，给 JavaScript 加上了类型，并能够编译成 JavaScript。顺带一提，这个 SDK 就是由 TypeScript 编写，因此使用诸如 VSCode 等编辑器会有很强的代码提示功能。文档中，我们也会使用 TypeScript 的 interface 描述数据结构`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`$ npm install muta-sdk@alpha\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"modules-in-sdk\"\n    }}>{`Modules in SDK`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Client：屏蔽了 GraphQL 的细节，更方便地和链的 GraphQL API 交互。`}</li>\n      <li parentName=\"ol\">{`Account：进行 Muta 的账户管理，一个账户包含了这个账户的私钥，公钥以及地址。`}</li>\n      <li parentName=\"ol\">{`Wallet：Muta 的钱包功能，可以管理多个Account。`}</li>\n      <li parentName=\"ol\">{`Service：提供对于 Muta 内置 Service 的直接通信，类似与对以太坊智能合约进行合约级别的 API 通信。`}</li>\n      <li parentName=\"ol\">{`utils: 包括了签名、地址转换、序列化、编解码等一系列工具方法`}</li>\n    </ol>\n    <p>{`详情请查看`}<a parentName=\"p\" {...{\n        \"href\": \"https://nervosnetwork.github.io/muta-sdk-js/\"\n      }}>{`SDK 文档`}</a>{`。`}</p>\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`接下来的例子中，我们将通过 5 个步骤，实现在链上创建一种属于我们的`}<a parentName=\"p\" {...{\n        \"href\": \"/muta-docs2/docs/docs_zh/built_in_service\"\n      }}>{`资产(Asset)`}</a>{`，并转账给另一个账户。`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Step 1：构建一个 Muta 对象，用以和链开始交互`}</li>\n      <li parentName=\"ul\">{`Step 2：创建分层确定性 HD 钱包，来管理你的账户`}</li>\n      <li parentName=\"ul\">{`Step 3：创建一个 Account 对象，来管理账户的公私钥对，并对交易进行签名`}</li>\n      <li parentName=\"ul\">{`Step 4：构建 Client 对象，正式和链上的 Service 进行数据交互`}</li>\n      <li parentName=\"ul\">{`Step 5(Optional)：通过使用 AssetService Binding 定向与 AssetService 进行交互`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"step-1：构建一个-muta-对象，用以和链进行交互\"\n    }}>{`Step 1：构建一个 Muta 对象，用以和链进行交互`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const muta = new Muta({\n    /**\n     * 通常是在genesis.toml里包含有默认的chain_id\n     * 在这个例子中我们假设 0xb6a4d7da21443f5e816e8700eea87610e6d769657d6b8ec73028457bf2ca4036是你要访问的链的ChainId\n     */\n    chainId:\n      '0xb6a4d7da21443f5e816e8700eea87610e6d769657d6b8ec73028457bf2ca4036',\n\n    /**\n     *  接下来我们给出 GraphQL API uri. endpoint 是用来和链进行 RPC 交互的 URI,\n     *  http://127.0.0.1:8000/graphql 是默认的 endpoint 是用来和链进行 RPC 交互的 URI,\n     *  你可以在 config.toml 文件下的 [graphql] 部分找到 endpoint 的配置\n     */\n    endpoint: 'http://127.0.0.1:8000/graphql',\n\n    /**\n     * timeout_gap 表示一笔交易发出后，最多允许几个块的延迟.如果随着链的进行, block 超出了\n     * timeout_gap 的设置但是交易仍然没有上链,那么这笔交易就被认为无效了.\n     * 比起以太坊的 txpool 的不确定性,muta 提供了tx及时性的检测和保障.\n     * timeoutGap 并没有默认值,但是 js-sdk 预设为 20,你可以所以更改\n     */\n    timeoutGap: DEFAULT_TIMEOUT_GAP,\n  });\n`}</code></pre>\n    <p>{`当然,如果你通过`}<a parentName=\"p\" {...{\n        \"href\": \"/muta-docs2/docs/docs_zh/getting_started\"\n      }}>{`快速入门`}</a>{`起了一条默认配置的链，并且现在你只是想跑通本文档的例子，你可以直接执行下面的指令。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`/**\n* 因为测试链的参数基本一致,所以上面的参数一般不会修改,那么下面的语句和上面的逻辑是一样的\n*/\nconst muta = Muta.createDefaultMutaInstance();\n`}</code></pre>\n    <p>{`好的，现在你已经了解了 muta 类了，非常简单，接下来让我们看看分层确定性钱包吧。`}</p>\n    <h4 {...{\n      \"id\": \"step-2：创建分层确定性-hd-钱包，来管理你的账户\"\n    }}>{`Step 2：创建分层确定性 HD 钱包，来管理你的账户`}</h4>\n    <p>{`如果想要了解 HD 钱包(分层确定性钱包) 的具体信息，可以从这些 eip 中获取：`}</p>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\"\n        }}>{`bip32`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\"\n        }}>{`bip39`}</a></li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki\"\n        }}>{`bip44`}</a></li>\n    </ol>\n    <p>{`我们需要先获得 HDWallet 的类型，注意，它只是构造函数，不是对象：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const Wallet = Muta.hdWallet;\n`}</code></pre>\n    <p>{`使用 HD 钱包，通常你需要一组 12 个字的助记词，你可以用已有的助记词，或者通过下面的方法生成助记词，\n当然，该组助记词会用来生成 seed 种子，然后构建 HDWallet 的 masterNode。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const mnemonicWords = Wallet.generateMnemonic();\n`}</code></pre>\n    <p>{`然后你可以使用助记词来构建一个 HDWallet 了，这里使用的是我们刚才随机生成的助记词，当然你也可以用已有的：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const hdWallet = new Wallet(mnemonicWords);\nconst hdWallet = new Wallet(\n    'drastic behave exhaust enough tube judge real logic escape critic horror gold'\n  );\n`}</code></pre>\n    <p>{`仅接着，可以通过创建的 HDWallet 来派生子秘钥了。\n根据 bip44 的规范，我们的派生路径被设定为：\n`}<inlineCode parentName=\"p\">{`m/44'/\\${COIN_TYPE}'/\\${accountIndex}'/0/0`}</inlineCode>{`\n其中 `}<inlineCode parentName=\"p\">{`COIN_TYPE = 918`}</inlineCode>{`，accountIndex 就是需要派生的账户的索引。`}</p>\n    <h4 {...{\n      \"id\": \"step3：创建-account，来管理账户的公私钥对。\"\n    }}>{`Step3：创建 Account，来管理账户的公私钥对。`}</h4>\n    <p>{`Account 包含了一对公私钥对，以及他派生出来的地址，Muta 采用 secp256k1 作为签名曲线。`}</p>\n    <p>{`通过 HDWallet 可以派生出账户:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const account = hdWallet.deriveAccount(2); // 我们派生accountIndex=2 的账户\n`}</code></pre>\n    <p>{`当然，如果你有自己私钥，也可以通过指定私钥创建 Account：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const account = Muta.accountFromPrivateKey(\n    '0x1000000000000000000000000000000000000000000000000000000000000000',\n  );\n`}</code></pre>\n    <p>{`接着，获取对应的公钥和地址也不在话下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const publicKey = account.publicKey;\nconst address = account.address;\n`}</code></pre>\n    <p>{`到了这里，你已经成功创建了 Account，现在让我们进入 Client，来学习如何和链进行交互。`}</p>\n    <h4 {...{\n      \"id\": \"step-4：构建-client-对象，正式和链上的-service-进行数据交互\"\n    }}>{`Step 4：构建 Client 对象，正式和链上的 Service 进行数据交互`}</h4>\n    <p>{`关于 Muta 的 GraphQL API 接口, 请参看`}<a parentName=\"p\" {...{\n        \"href\": \"./graphql_api\"\n      }}>{`接口`}</a>{`章节。`}</p>\n    <p>{`Muta 的 GraphQL API 提供了 Query 和 Mutation。`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Query 的调用不会对数据进行任何形式的修改，一般是查询`}</li>\n      <li parentName=\"ul\">{`Mutation 的调用则能够修改链上数据的`}</li>\n    </ul>\n    <p>{`Client 类还提供了一些工具方法，这些方法不会发送请求到网络，所以他们不属于 Muta GraphQL API 接口，但是也被包含在 Client 类里。`}</p>\n    <p>{`目前的 API 大致分为如下：`}</p>\n    <p><strong parentName=\"p\">{`Query`}</strong></p>\n    <ol>\n      <li parentName=\"ol\">{`getBlock, getLatestBlockHeight and waitForNextNBlock`}</li>\n      <li parentName=\"ol\">{`getTransaction`}</li>\n      <li parentName=\"ol\">{`getReceipt`}</li>\n      <li parentName=\"ol\">{`queryService and queryServiceDyn`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Mutation`}</strong></p>\n    <ol>\n      <li parentName=\"ol\">{`sendTransaction`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Locally`}</strong></p>\n    <ol>\n      <li parentName=\"ol\">{`composeTransaction`}</li>\n    </ol>\n    <p>{`我们通过例子，一步一步来了解。因为 Client 必须知道通过那个接口和节点进行数据通信，所以必须提供 uri。不过在本文档第一步构建 muta 对象时，给出了 endpoint 参数，那么现在我们可以直接通过 muta 对象来获得一个 Client 对象：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let client = Muta.createDefaultMutaInstance().client();\n`}</code></pre>\n    <p>{`当然,你也可以自己构建一个 Client 对象：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`let client = new Client({\n  chainId:\n    '0xb6a4d7da21443f5e816e8700eea87610e6d769657d6b8ec73028457bf2ca4036',\n  defaultCyclesLimit: '0xffff',\n  defaultCyclesPrice: '0xffff',\n  endpoint: 'http://127.0.0.1:8000/graphql',\n  maxTimeout: DEFAULT_TIMEOUT_GAP * DEFAULT_CONSENSUS_INTERVAL,\n});\n`}</code></pre>\n    <p>{`我们来解释下其中的参数：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`chainId：链唯一 id`}</li>\n      <li parentName=\"ul\">{`endpoint：节点消息端。节点通过注册消息端地址对外暴露服务，实现消息接受及处理`}</li>\n      <li parentName=\"ul\">{`defaultCyclesLimit/defaultCyclesPrice：是在将来发送 GraphQL API 请求时给定的默认值，当然你在发送请求的时候可以指定新的值。`}</li>\n      <li parentName=\"ul\">{`maxTimeout = DEFAULT_TIMEOUT_GAP * DEFAULT_CONSENSUS_INTERVAL：因为区块链没有世界时钟，所以只能通过 block 高度 x 平均期望出块时间来大致计算出现实时间。Muta 内置 Overlord 共识算法的预期`}<strong parentName=\"li\">{`单轮`}</strong>{`出块时间是 3 秒，所以 DEFAULT_CONSENSUS_INTERVAL=3000 // (ms)。`}</li>\n    </ul>\n    <p>{`万事俱备，接下来我们开始与链进行交互。我们先尝试获得某个区块的信息，因为如果你能某一个区块的信息，就能获得所有的区块的信息，就能获得区块链的信息。`}</p>\n    <p>{`我们获得第 10 高度的区块：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const blockInfo = await client.getBlock('10');\n`}</code></pre>\n    <p>{`也可以获得最新的高度的区块:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const latestBlockInfo = await client.getBlock();\n`}</code></pre>\n    <p>{`当然，你可以直接获得最新区块的高度：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const latestBlockHeight = await client.getLatestBlockHeight();\n`}</code></pre>\n    <p>{`接下来我们更进一步，我们从节点 Query 一些数据，还记得么 Query 和 Mutation 的差别么?`}</p>\n    <p>{`Muta 拥有若干 service，例如 `}<a parentName=\"p\" {...{\n        \"href\": \"/muta-docs2/docs/docs_zh/built_in_service\"\n      }}>{`metadata`}</a>{` 服务会提供一些关于链的基础信息；`}<a parentName=\"p\" {...{\n        \"href\": \"/muta-docs2/docs/docs_zh/built_in_service\"\n      }}>{`asset`}</a>{` 资产服务可以提供创建用户自定义 token 的功能(User defined tokens)。\n服务之间通常居然有依赖关系，可以互相调用，构建出更高级的业务逻辑。如果你是要和内置服务交互，那么请参考我们的内置服务的 GraphQL API 接口手册，如果你是要和用户自定义服务交互，那么可以在 GitHub issue 下留下大侠的足迹。`}</p>\n    <p>{`为了进一步学习，我们现在向 AssetService 来发起 Query 请求，访问数据。在发起任何 Query 之前，我们都必须知道请求接口交互的数据格式是什么。`}</p>\n    <p>{`接下来，我们要向 AssetService 来发起查询 Asset 的请求。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`type Address = string;\nexport interface GetBalancePayParam {\n  asset_id: string;\n  user: Address;\n}\n`}</code></pre>\n    <p>{`接口返回的数据类型是：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`type Hash = string;\n\nexport interface Balance {\n  asset_id: Hash;\n  balance: number | BigNumber;\n}\n`}</code></pre>\n    <p>{`其中 asset_id 是创建一个 Asset 后，Asset 服务返回的唯一标识。`}</p>\n    <p>{`现在我们通过 queryServiceDyn 方法来访问他，queryServiceDyn 和 queryService 的 api，请参考 SDK 文档或者 API 文档：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`  try {\n    const asset_id =\n      '0x0000000000000000000000000000000000000000000000000000000000000000';\n    asset = await client.queryServiceDyn<\n      GetBalancePayParam,\n      Balance\n    >({\n      method: 'get_balance',\n      payload: { \n        asset_id, \n        user: '0x2000000000000000000000000000000000000000'\n      },\n      serviceName: 'asset',\n    } as ServicePayload<GetAssetParam>);\n  } catch (e) {\n    // TODO\n    console.error(e)\n  }\n`}</code></pre>\n    <p>{`很好，这段代码应该会进入 catch，然后设定 asset 为 null，毕竟我们什么 Asset 都没有创建过。这仅仅是一个 Query，查询的例子。`}</p>\n    <p>{`现在我们进入增删改的部分，也就是 Mutation 请求。 SendTransaction 是一个 Mutation 的请求。那么我们来看看SendTransaction 需要提供那些数据。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`    public async sendTransaction(\n    signedTransaction: SignedTransaction,\n  ): Promise<Hash> \n\n    export interface SignedTransaction {\n      chainId: string;\n      cyclesLimit: string;\n      cyclesPrice: string;\n      nonce: string;\n      timeout: string;\n      serviceName: string;\n      method: string;\n      payload: string;\n      txHash: string;\n      pubkey: string;\n      signature: string;\n    }\n`}</code></pre>\n    <p>{`可以看到，发送一笔交易，和大多数区块链类似，需要一笔被`}<strong parentName=\"p\">{`签名`}</strong>{`的交易`}</p>\n    <p>{`那么我们先来构建一笔`}<strong parentName=\"p\">{`创建`}</strong>{` Asset 交易，然后对其签名。`}</p>\n    <p>{`通过查询 GraphQL API 接口文档,`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`创建 Asset 服务的服务名是: asset`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`接口的方法为: create_asset,`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`接受接受的参数为: CreateAssetParam`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`    export interface CreateAssetParam {\n      name: string;\n      symbol: string;\n      supply: number | BigNumber;\n    }\n`}</code></pre>\n    <p>{`那么我们通过 Client 的工具方法 composeTransaction 来构建一个这样的交易对象：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`    const tx = await client.composeTransaction({\n        method: 'create_asset',\n        payload: { name: 'MY_COIN', symbol: 'SC', supply: 10000000 },\n        serviceName: 'asset',\n      });\n`}</code></pre>\n    <p>{`随后我们需要使用一个用户，对交易签名，那么这个用户就是这个 Asset 的 issuer。还记得 Account 类型么？现在是他上场的时候了，使用你所期望的用户的 Account 对象调用 signTransaction 来对交易签名：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`    const signedTransaction = Muta.accountFromPrivateKey(\n        '0x1000000000000000000000000000000000000000000000000000000000000000',\n      ).signTransaction(tx);\n`}</code></pre>\n    <p>{`现在我们可以调用 signTransaction 来发送我们的交易了。和大多数区块链一样，由于是异步网络和起步业务系统，你所提交的交易可能不会被立刻提交到区块链上。发送交易后通常返回交易的位置标识哈希值。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`    const txHash = await client.sendTransaction(signedTransaction);\n`}</code></pre>\n    <p>{`接下来我们只需要通过标识哈希定期去查询交易，看交易是否被成功提交到了区块链。如果一笔交易被成功地提交到了区块链，那么他将不可篡改不可回滚。`}</p>\n    <p>{`当区块链认为一笔交易比成功的提交了，他会返回一张 Receipt 交易凭证，给出了交易的诸多信息，以及交易执行后的返回，我们可以通过getReceipt 来获得凭证：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`    const receipt = await client.getReceipt(txHash);\n`}</code></pre>\n    <p>{`Receipt 凭证的数据类型如下:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`export interface Receipt {\n  stateRoot: string; // 交易被执行后的 MerkleRoot\n  height: string; // 交易被提交进入的块的盖高度\n  txHash: string; // 该笔交易的唯一哈希表示\n  cyclesUsed: string; // 该笔交易使用的 cycles\n  events: Event[]; // 该笔交易产生的事件\n  response: ReceiptResponse; // 该笔交易的执行结果\n}\n\nexport interface ReceiptResponse {\n  serviceName: string; // 该笔交易调用的服务名称\n  method: string; // 该笔交易调用的服务方法\n  ret: string; // 服务给出的返回数据\n  isError: boolean; // 服务给出的返回结果,运行是否成功\n}\n`}</code></pre>\n    <p>{`请仔细阅读上面的数据结构，需要只出的是，ret 和 isError 可能同时给出。例如 ret 给出错误信息。返回 ret 数据是通用的字符串类型，但具体数据可是请参考对应服务的 GraphQL API 接口。`}</p>\n    <p>{`这里我们的 create_asset 方法返回的格式就是之前见过的 Asset 数据格式，并且是通过 JSON 来序列化的：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`export interface Asset {\n  asset_id: Hash;\n  name: string;\n  symbol: string;\n  supply: number | BigNumber;\n  issuer: Address;\n}\n`}</code></pre>\n    <p>{`所以我们可以通过 JSON.parse 来把 ret 字符串转换成对应的 Asset 对象：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`  let createdAssetResult = utils.safeParseJSON(receipt.response.ret); // util 工具类请参考API doc\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"step5：通过使用-assetservice-binding-api，直接和-assetservice-交互\"\n    }}>{`Step5：通过使用 AssetService Binding API，直接和 AssetService 交互`}</h4>\n    <p>{`好的，通过 Client 的例子，你已经可以向任何服务发起数据交互了。但是每次都调用原生的 `}<inlineCode parentName=\"p\">{`queryService`}</inlineCode>{` 与 `}<inlineCode parentName=\"p\">{`sendTransaction`}</inlineCode>{` 非常的恼人，所以，我们可以直接使用已经内置了的 Service Binding。还是拿 AssetService 举例子，SDK 中提供了它的 binding。`}</p>\n    <p>{`老规矩，我们仍然需要一个 Client 对象和 Account 对象，就像上一节里我们用到的一样，作用也是一样的。随后我们创建一个AssetService：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`    const muta = Muta.createDefaultMutaInstance();\n    const account = Muta.accountFromPrivateKey(\n      '0x1000000000000000000000000000000000000000000000000000000000000000',\n    );\n    \n    const client = muta.client();\n\n    /**\n     * we build a service, pass the client and account object\n     * nothing abnormal\n     */\n    const service = new AssetService(client, account);\n`}</code></pre>\n    <p>{`接下来就非常简单了，我们直接创建一个资产，参数类型和之前的相同，不再赘述：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`  // 调用 binding 的 create_asset，它能够帮我们 sendTransaction 并 getReceipt\n  const assetReceipt = await service.create_asset({\n    name: 'LOVE_COIN',\n    supply: 1314,\n    symbol: 'LUV',\n  });\n  \n  // \n  const asset = assetReceipt.response.ret;\n  \n  const assetId = asset.id;\n`}</code></pre>\n    <p>{`查询一下某个用户的余额：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`const balanceReceipt = await service.get_balance({\n  asset_id: assetId, \n  user: '0x2000000000000000000000000000000000000000'\n});\n`}</code></pre>\n    <p>{`最后是向某个用户发送一定数量的 UDT，这里是 LOVE_COIN：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`  await service.transfer({\n    asset_id: assetId,\n    to:'0x2000000000000000000000000000000000000000',\n    value: 520,\n  });\n`}</code></pre>\n    <p>{`好了！教程到此结束了，相信你已经可以熟练使用 JS-SDK 了。`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}