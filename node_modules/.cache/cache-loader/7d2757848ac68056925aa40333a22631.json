{"remainingRequest":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/docs2/muta-docs2/docs/dex.md","dependencies":[{"path":"/Users/Yun/Desktop/docs2/muta-docs2/docs/dex.md","mtime":1588930947353},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/.docusaurus/docusaurus-plugin-content-docs/site-docs-dex-md-75b.json","mtime":1589273094689},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}