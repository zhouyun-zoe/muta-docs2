{"remainingRequest":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/docs2/muta-docs2/docs/docs_zh/built_in_service.md","dependencies":[{"path":"/Users/Yun/Desktop/docs2/muta-docs2/docs/docs_zh/built_in_service.md","mtime":1592902504769},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/.docusaurus/docusaurus-plugin-content-docs/site-docs-docs-zh-built-in-service-md-315.json","mtime":1592905932519},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/Desktop/docs2/muta-docs2/docs/docs_zh/built_in_service.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'built_in_service',\n\ttitle: '内置 Service 说明'\n};\nexport const metadata = {\n  \"id\": \"docs_zh/built_in_service\",\n  \"title\": \"内置 Service 说明\",\n  \"description\": \"## 概述\",\n  \"source\": \"@site/docs/docs_zh/built_in_service.md\",\n  \"permalink\": \"/muta-docs2/docs/docs_zh/built_in_service\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta-docs/docs/docs_zh/built_in_service.md\"\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: '概述',\n  id: '概述',\n  children: []\n}, {\n  value: 'Metadata Service',\n  id: 'metadata-service',\n  children: []\n}, {\n  value: '接口',\n  id: '接口',\n  children: [{\n    value: '读取链元数据信息',\n    id: '读取链元数据信息',\n    children: []\n  }]\n}, {\n  value: 'Asset Service',\n  id: 'asset-service',\n  children: []\n}, {\n  value: '接口',\n  id: '接口-1',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"概述\"\n    }}>{`概述`}</h2>\n    <p>{`目前 Muta 框架源代码目前内置了两个 built-in Service：Metadata Service 和 Asset Service。Metadata Service 为起链所比如配置的 Service。其他 Service（包括 Asset Service）为可选配置。`}</p>\n    <h2 {...{\n      \"id\": \"metadata-service\"\n    }}>{`Metadata Service`}</h2>\n    <p>{`用来存储链的元数据信息，以支持链的运营方在起链前对链的相关信息进行配置。这些元数据包括：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`pub struct Metadata {\n    pub chain_id:        Hash,\n    pub common_ref:      Hex, // BLS 签名算法的公共参数\n    pub timeout_gap:     u64, // (交易有效期 - 当前区块高度)的最大值\n    pub cycles_limit:    u64, // 区块全部交易消耗的 cycles 上限\n    pub cycles_price:    u64, // 节点设置的交易打包进区块的最小 cycles_price\n    pub interval:        u64, // 区块产生间隔\n    pub verifier_list:   Vec<ValidatorExtend>, // 共识验证人列表\n    pub propose_ratio:   u64, // 共识 propose 阶段的超时时间与 interval 的比值\n    pub prevote_ratio:   u64, // 共识 prevote 阶段的超时时间与 interval 的比值\n    pub precommit_ratio: u64, // 共识 precommit 阶段的超时时间与 interval 的比值\n    pub brake_ratio: u64 // 共识重发 choke 的超时时间与 interval 的比值\n}\n\npub struct ValidatorExtend {\n    pub bls_pub_key:    Hex,\n    pub address:        Address,\n    pub propose_weight: u32, //出块权重\n    pub vote_weight:    u32, // 投票权重\n}\n`}</code></pre>\n    <p>{`通过 Metadata Service 可以读取这些信息，接口如下： `}</p>\n    <h2 {...{\n      \"id\": \"接口\"\n    }}>{`接口`}</h2>\n    <h3 {...{\n      \"id\": \"读取链元数据信息\"\n    }}>{`读取链元数据信息`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`fn get_metadata(&self, ctx: ServiceContext) -> ProtocolResult<Metadata>；\n`}</code></pre>\n    <p>{`GraphiQL 示例：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`query get_metadata{\n  queryService(\n  caller: \"0x016cbd9ee47a255a6f68882918dcdd9e14e6bee1\"\n  serviceName: \"metadata\"\n  method: \"get_metadata\"\n  payload: \"\"\n  ){\n    ret,\n    isError\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"asset-service\"\n    }}>{`Asset Service`}</h2>\n    <p>{`Asset service 负责管理链原生资产以及第三方发行资产。`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`资产成为一等公民：加密资产作为区块链的核心，理应成为一等公民。Asset 模块利用 Muta 框架提供的 service 能力，为所有资产提供链级别的支持，为面向资产编程提供支持。`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`第三方发行资产： 用户可以使用 Asset 模块发行资产，自定义资产属性和总量等`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`资产与合约交互： 未来可以打通虚拟机和资产模块，为资产的广泛使用提供支持`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"接口-1\"\n    }}>{`接口`}</h2>\n    <p>{`Asset 模块采用类似以太坊 ERC-20 的接口设计，主要包含：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`发行资产`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 资产数据结构\npub struct Asset {\n    pub id:     Hash,\n    pub name:   String,\n    pub symbol: String,\n    pub supply: u64,\n    pub issuer: Address,\n}\n\n// 发行资产接口\n// 资产 ID 自动生成，确保唯一\nfn create_asset(&mut self, ctx: ServiceContext, payload: CreateAssetPayload) -> ProtocolResult<Asset>;\n\n// 发行资产参数\npub struct CreateAssetPayload {\n    pub name:   String,\n    pub symbol: String,\n    pub supply: u64,\n}\n`}</code></pre>\n    <p>{`GraphiQL 示例：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`mutation create_asset{\n  unsafeSendTransaction(inputRaw: {\n    serviceName:\"asset\",\n    method:\"create_asset\",\n    payload:\"{\\\\\"name\\\\\":\\\\\"Test Coin\\\\\",\\\\\"symbol\\\\\":\\\\\"TC\\\\\",\\\\\"supply\\\\\":100000000}\",\n    timeout:\"0x172\",\n    nonce:\"0x9db2d7efe2b61a88827e4836e2775d913a442ed2f9096ca1233e479607c27cf7\",\n    chainId:\"0xb6a4d7da21443f5e816e8700eea87610e6d769657d6b8ec73028457bf2ca4036\",\n    cyclesPrice:\"0x9999\",\n    cyclesLimit:\"0x9999\"\n  }, inputPrivkey: \"0x30269d47fcf602b889243722b666881bf953f1213228363d34cf04ddcd51dfd2\"\n  )\n}\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`查询资产信息`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 查询接口\nfn get_asset(&self, ctx: ServiceContext, payload: GetAssetPayload) -> ProtocolResult<Asset>；\n\n// 查询参数\npub struct GetAssetPayload {\n    pub id: Hash, // 资产 ID\n}\n`}</code></pre>\n    <p>{`GraphiQL 示例：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`query get_asset{\n  queryService(\n  caller: \"0x016cbd9ee47a255a6f68882918dcdd9e14e6bee1\"\n  serviceName: \"asset\"\n  method: \"get_asset\"\n  payload: \"{\\\\\"id\\\\\": \\\\\"0x5f1364a8e6230f68ccc18bc9d1000cedd522d6d63cef06d0062f832bdbe1a78a\\\\\"}\"\n  ){\n    ret,\n    isError\n  }\n}\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`转账`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 转账接口\nfn transfer(&mut self, ctx: ServiceContext, payload: TransferPayload) -> ProtocolResult<()>；\n\n// 转账参数\npub struct TransferPayload {\n    pub asset_id: Hash,\n    pub to:       Address,\n    pub value:    u64,\n}\n`}</code></pre>\n    <p>{`GraphiQL 示例：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`mutation transfer{\n  unsafeSendTransaction(inputRaw: {\n    serviceName:\"asset\",\n    method:\"transfer\",\n    payload:\"{\\\\\"asset_id\\\\\":\\\\\"0x5f1364a8e6230f68ccc18bc9d1000cedd522d6d63cef06d0062f832bdbe1a78a\\\\\",\\\\\"to\\\\\":\\\\\"0xf8389d774afdad8755ef8e629e5a154fddc6325a\\\\\", \\\\\"value\\\\\":10000}\",\n    timeout:\"0x289\",\n    nonce:\"0x9db2d7efe2b61a28827e4836e2775d913a442ed2f9096ca1233e479607c27cf7\",\n    chainId:\"0xb6a4d7da21443f5e816e8700eea87610e6d769657d6b8ec73028457bf2ca4036\",\n    cyclesPrice:\"0x9999\",\n    cyclesLimit:\"0x9999\",\n    }, inputPrivkey: \"0x30269d47fcf602b889243722b666881bf953f1213228363d34cf04ddcd51dfd2\"\n  )\n}\n`}</code></pre>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`查询余额`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 查询接口\nfn get_balance(&self, ctx: ServiceContext, payload: GetBalancePayload) -> ProtocolResult<GetBalanceResponse> \n\n// 查询参数\npub struct GetBalancePayload {\n    pub asset_id: Hash,\n    pub user:     Address,\n}\n\n// 返回值\npub struct GetBalanceResponse {\n    pub asset_id: Hash,\n    pub user:     Address,\n    pub balance:  u64,\n}\n`}</code></pre>\n    <p>{`GraphiQL 示例： `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`query get_balance{\n  queryService(\n  caller: \"0x016cbd9ee47a255a6f68882918dcdd9e14e6bee1\"\n  serviceName: \"asset\"\n  method: \"get_balance\"\n  payload: \"{\\\\\"asset_id\\\\\": \\\\\"0x5f1364a8e6230f68ccc18bc9d1000cedd522d6d63cef06d0062f832bdbe1a78a\\\\\", \\\\\"user\\\\\": \\\\\"0x016cbd9ee47a255a6f68882918dcdd9e14e6bee1\\\\\"}\"\n  ){\n    ret,\n    isError\n  }\n}\n`}</code></pre>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`批准额度`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 批准接口\nfn approve(&mut self, ctx: ServiceContext, payload: ApprovePayload) -> ProtocolResult<()>;\n\n// 批准参数\npub struct ApprovePayload {\n    pub asset_id: Hash,\n    pub to:       Address,\n    pub value:    u64,\n}\n`}</code></pre>\n    <p>{`GraphiQL 示例： `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`  unsafeSendTransaction(inputRaw: {\n    serviceName:\"asset\",\n    method:\"approve\",\n    payload:\"{\\\\\"asset_id\\\\\":\\\\\"0x5f1364a8e6230f68ccc18bc9d1000cedd522d6d63cef06d0062f832bdbe1a78a\\\\\",\\\\\"to\\\\\":\\\\\"0xf8389d774afdad8755ef8e629e5a154fddc6325a\\\\\", \\\\\"value\\\\\":10000}\",\n    timeout:\"0x378\",\n    nonce:\"0x9db2d7efe2b61a28827e4836e2775d913a442ed2f9096ca1233e479607c27cf7\",\n    chainId:\"0xb6a4d7da21443f5e816e8700eea87610e6d769657d6b8ec73028457bf2ca4036\",\n    cyclesPrice:\"0x9999\",\n    cyclesLimit:\"0x9999\",\n    }, inputPrivkey: \"0x30269d47fcf602b889243722b666881bf953f1213228363d34cf04ddcd51dfd2\"\n  )\n}\n`}</code></pre>\n    <ol {...{\n      \"start\": 6\n    }}>\n      <li parentName=\"ol\">{`授权转账`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 接口\nfn transfer_from(&mut self, ctx: ServiceContext, payload: TransferFromPayload) -> ProtocolResult<()>；\n\n// 参数\npub struct TransferFromPayload {\n    pub asset_id:  Hash,\n    pub sender:    Address,\n    pub recipient: Address,\n    pub value:     u64,\n}\n`}</code></pre>\n    <p>{`GraphiQL 示例：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`mutation transfer_from{\n  unsafeSendTransaction(inputRaw: {\n    serviceName:\"asset\",\n    method:\"transfer_from\",\n    payload:\"{\\\\\"asset_id\\\\\":\\\\\"0x5f1364a8e6230f68ccc18bc9d1000cedd522d6d63cef06d0062f832bdbe1a78a\\\\\",\\\\\"sender\\\\\":\\\\\"0x016cbd9ee47a255a6f68882918dcdd9e14e6bee1\\\\\", \\\\\"recipient\\\\\":\\\\\"0xfffffd774afdad8755ef8e629e5a154fddc6325a\\\\\", \\\\\"value\\\\\":5000}\",\n    timeout:\"0x12c\",\n    nonce:\"0x9db2d7efe2b61a28827e4836e2775d913a442ed2f9096ca1233e479607c27cf7\",\n    chainId:\"0xb6a4d7da21443f5e816e8700eea87610e6d769657d6b8ec73028457bf2ca4036\",\n    cyclesPrice:\"0x9999\",\n    cyclesLimit:\"0x9999\",\n    }, inputPrivkey: \"0x45c56be699dca666191ad3446897e0f480da234da896270202514a0e1a587c3f\"\n  )\n}\n`}</code></pre>\n    <ol {...{\n      \"start\": 7\n    }}>\n      <li parentName=\"ol\">{`查询限额`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// 查询接口\nfn get_allowance(&self, ctx: ServiceContext, payload: GetAllowancePayload) -> ProtocolResult<GetAllowanceResponse>；\n\n// 查询参数\npub struct GetAllowancePayload {\n    pub asset_id: Hash,\n    pub grantor:  Address,\n    pub grantee:  Address,\n}\n\n// 返回值\npub struct GetAllowanceResponse {\n    pub asset_id: Hash,\n    pub grantor:  Address,\n    pub grantee:  Address,\n    pub value:    u64,\n}\n`}</code></pre>\n    <p>{`GraphiQL 示例：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-graphql\"\n      }}>{`query get_allowance{\n  queryService(\n  caller: \"0x016cbd9ee47a255a6f68882918dcdd9e14e6bee1\"\n  serviceName: \"asset\"\n  method: \"get_allowance\"\n  payload: \"{\\\\\"asset_id\\\\\": \\\\\"0x5f1364a8e6230f68ccc18bc9d1000cedd522d6d63cef06d0062f832bdbe1a78a\\\\\", \\\\\"grantor\\\\\": \\\\\"0x016cbd9ee47a255a6f68882918dcdd9e14e6bee1\\\\\", \\\\\"grantee\\\\\": \\\\\"0xf8389d774afdad8755ef8e629e5a154fddc6325a\\\\\"}\"\n  ){\n    ret,\n    isError\n  }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}