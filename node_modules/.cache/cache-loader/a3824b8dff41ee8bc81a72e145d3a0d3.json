{"remainingRequest":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/docs2/muta-docs2/docs/docs_zh/dex.md","dependencies":[{"path":"/Users/Yun/Desktop/docs2/muta-docs2/docs/docs_zh/dex.md","mtime":1592902504769},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/.docusaurus/docusaurus-plugin-content-docs/site-docs-docs-zh-dex-md-5d0.json","mtime":1592905932519},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/Desktop/docs2/muta-docs2/docs/docs_zh/dex.md"],"names":["React","mdx","frontMatter","id","sidebar_label","title","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'dex',\n\tsidebar_label: 'DEX 开发指南',\n\ttitle: 'Tutorial：使用 Muta 框架从零开发一条 Dex 专有链'\n};\nexport const metadata = {\n  \"id\": \"docs_zh/dex\",\n  \"title\": \"Tutorial：使用 Muta 框架从零开发一条 Dex 专有链\",\n  \"description\": \"我们的目标是开发一条链上挂单、链上撮合、链上成交的简易 dex 专有链，旨在通过 step by step 的流程，帮助开发者熟悉 Muta 框架，学会如何使用框架开发自己的区块链。\",\n  \"source\": \"@site/docs/docs_zh/dex.md\",\n  \"permalink\": \"/muta-docs2/docs/docs_zh/dex\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta-docs/docs/docs_zh/dex.md\",\n  \"sidebar_label\": \"DEX 开发指南\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Service 开发指南\",\n    \"permalink\": \"/muta-docs2/docs/docs_zh/service_dev\"\n  },\n  \"next\": {\n    \"title\": \"Mempool\",\n    \"permalink\": \"/muta-docs2/docs/docs_zh/transaction_pool\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: '1. 思考需要的 Service',\n  id: '1-思考需要的-service',\n  children: []\n}, {\n  value: '2. 开发 Asset Service，Dex Service',\n  id: '2-开发-asset-service，dex-service',\n  children: [{\n    value: '使用脚手架 muta-drone 对 Service 进行初始化',\n    id: '使用脚手架-muta-drone-对-service-进行初始化',\n    children: []\n  }, {\n    value: '编写 Asset Service',\n    id: '编写-asset-service',\n    children: []\n  }, {\n    value: '编写 Dex Service',\n    id: '编写-dex-service',\n    children: []\n  }]\n}, {\n  value: '3. 将 Service 接入框架，编译运行！',\n  id: '3-将-service-接入框架，编译运行！',\n  children: []\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`我们的目标是开发一条链上挂单、链上撮合、链上成交的简易 dex 专有链，旨在通过 step by step 的流程，帮助开发者熟悉 Muta 框架，学会如何使用框架开发自己的区块链。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`在开始本教程之前，开发者需要先学习 `}<a parentName=\"p\" {...{\n          \"href\": \"/muta-docs2/docs/service_dev\"\n        }}>{`Service 开发指南`}</a></p>\n    </blockquote>\n    <p>{`我们按照 `}<a parentName=\"p\" {...{\n        \"href\": \"/muta-docs2/docs/service_dev\"\n      }}>{`Service 开发指南`}</a>{` 中提到的，使用 Muta 框架开发自己的区块链流程，来开发这条 dex 专有链：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`思考自己链的专属需求，确定需要哪些 Service`}</li>\n      <li parentName=\"ol\">{`如果需要的 Service 有现成的，可以直接复用；如果没有，可以自己开发`}</li>\n      <li parentName=\"ol\">{`将这些 Service 接入框架，编译运行！`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"1-思考需要的-service\"\n    }}>{`1. 思考需要的 Service`}</h2>\n    <p>{`我们一共需要 2 个 Service，除了 Dex Service 外，由于 Dex 链需要有进行交易的资产，所以还需要一个 Asset Service。Asset Service 除了常见的发行、转账、查询功能外，还需要一个锁定资产功能。因为用户发起挂单交易时，需要锁定用户资产，确保成交时有足够的余额来完成交易。Dex 订单成交时，需要修改用户资产余额，所以 Asset Service 需要提供修改余额接口，并且该接口只能由 Dex Service 调用，无法被用户直接调用。我们将 Asset Service 的接口定义如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`#[cycles(210_00)]\n#[write]\nfn create_asset(\n    &mut self,\n    ctx: ServiceContext,\n    payload: CreateAssetPayload,\n) -> ProtocolResult<Asset>;\n\n#[cycles(100_00)]\n#[read]\nfn get_asset(&self, ctx: ServiceContext, payload: GetAssetPayload) -> ProtocolResult<Asset>;\n\n#[cycles(210_00)]\n#[write]\nfn transfer(&mut self, ctx: ServiceContext, payload: TransferPayload) -> ProtocolResult<()> ;\n\n#[cycles(100_00)]\n#[read]\nfn get_balance(\n    &self,\n    ctx: ServiceContext,\n    payload: GetBalancePayload,\n) -> ProtocolResult<GetBalanceResponse>;\n\n#[cycles(210_00)]\n#[write]\nfn lock_value(\n    &mut self,\n    ctx: ServiceContext,\n    payload: ModifyBalancePayload,\n) -> ProtocolResult<()>;\n\n#[cycles(210_00)]\n#[write]\nfn unlock_value(\n    &mut self,\n    ctx: ServiceContext,\n    payload: ModifyBalancePayload,\n) -> ProtocolResult<()>;\n\n#[cycles(210_00)]\n#[write]\nfn add_value(\n    &mut self,\n    ctx: ServiceContext,\n    payload: ModifyBalancePayload,\n) -> ProtocolResult<()>;\n\n#[cycles(210_00)]\n#[write]\nfn sub_value(\n    &mut self,\n    ctx: ServiceContext,\n    payload: ModifyBalancePayload,\n) -> ProtocolResult<()>;\n`}</code></pre>\n    <p>{`Dex Service 包含的功能有：`}</p>\n    <ol>\n      <li parentName=\"ol\">{`增加交易对`}</li>\n      <li parentName=\"ol\">{`查询交易对`}</li>\n      <li parentName=\"ol\">{`发起挂单交易（买或卖）`}</li>\n      <li parentName=\"ol\">{`每个 block 执行结束后，匹配订单并成交`}</li>\n      <li parentName=\"ol\">{`查询订单状态`}</li>\n    </ol>\n    <p>{`功能 1、2、3、5 可由用户调用 Servcie 接口触发：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`    #[cycles(210_00)]\n    #[write]\n    fn add_trade(&mut self, ctx: ServiceContext, payload: AddTradePayload) -> ProtocolResult<()>;\n\n    #[read]\n    fn get_trades(&self, _ctx: ServiceContext) -> ProtocolResult<GetTradesResponse>;\n\n    #[cycles(210_00)]\n    #[write]\n    fn order(&mut self, ctx: ServiceContext, payload: OrderPayload) -> ProtocolResult<()>;\n\n    #[read]\n    fn get_order(\n        &self,\n        ctx: ServiceContext,\n        payload: GetOrderPayload,\n    ) -> ProtocolResult<GetOrderResponse>;\n`}</code></pre>\n    <p>{`功能 4 由 `}<inlineCode parentName=\"p\">{`#[hook_after]`}</inlineCode>{` 自动触发：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`    #[hook_after]\n    fn match_and_deal(&mut self, params: &ExecutorParams) -> ProtocolResult<()>;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"2-开发-asset-service，dex-service\"\n    }}>{`2. 开发 Asset Service，Dex Service`}</h2>\n    <h3 {...{\n      \"id\": \"使用脚手架-muta-drone-对-service-进行初始化\"\n    }}>{`使用脚手架 muta-drone 对 Service 进行初始化`}</h3>\n    <p>{`Service 设计完成后，我们进入开发阶段。我们需要新建一个 rust 工程，同时在工程中引用 Muta Library，好消息是 Muta 框架提供了脚手架 `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/muta-drone\"\n      }}>{`muta-drone`}</a>{` 来帮助开发者一键配置工程目录。`}</p>\n    <ul>\n      <li parentName=\"ul\">{`安装脚手架`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`npm install -g muta-drone\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`运行 `}<inlineCode parentName=\"li\">{`drone node`}</inlineCode>{` 命令，按提示配置工程目录`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`-> drone node\n    ? The name of your chain. muta-tutorial-dex     // 工程目录命\n    ? The chain id of your chain (32-Hash) (default: random generation)     // 回车键使用默认值\n    ? Private key of this node (secp256k1) (default: random generation)     // 回车键使用默认值\n    ? Verifier's address set, except you (eg. [0x1..., 0x2..])      // 回车键使用默认值\n    ? cycles limit 1099511627776        // 回车键使用默认值\n    Downloading template....\n    Copying template....\n    All right, enjoy!\n    Enter the following command to start your chain\n    $ cd muta-tutorial-dex && cargo run\n    When the rust compilation is complete, access graphiql play your chain.\n    $ open http://localhost:8000/graphiql\n-> \n`}</code></pre>\n    <p>{`muta-tutorial-dex 目录结构如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`./muta-tutorial-dex\n├── Cargo.lock\n├── Cargo.toml\n├── LICENSE\n├── README.md\n├── config\n│   ├── chain.toml\n│   └── genesis.toml\n├── rust-toolchain\n├── services\n│   └── metadata\n│       ├── Cargo.toml\n│       └── src\n│           └── lib.rs\n└── src\n    └── main.rs\n`}</code></pre>\n    <p>{`可以看到，目录主要包含 config，services 和 src 三个子目录：`}</p>\n    <ul>\n      <li parentName=\"ul\">{`config：链的配置信息`}</li>\n      <li parentName=\"ul\">{`services：包含链的所有 service`}</li>\n      <li parentName=\"ul\">{`src：这条链的 bin 目录，在 main.rs 中，我们将 services 接入 muta library，并启动整条链`}</li>\n    </ul>\n    <p>{`services 目录中包含了一个 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/nervosnetwork/muta-template/tree/master/node-template/services/metadata\"\n      }}>{`metadata service`}</a>{`，该 service 为系统内置 service。我们需要在 services 目录中加上 asset service 和 dex service，脚手架 muta-drone 也有命令帮助我们构建 service 目录。`}</p>\n    <ul>\n      <li parentName=\"ul\">{`运行 `}<inlineCode parentName=\"li\">{`drone service`}</inlineCode>{` 命令，构建 service 工程目录`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`-> cd muta-tutorial-dex\n-> drone service asset\n        Downloading template....\n        Copying template....\n        Done! asset service path /patht/o/muta-tutorial-dex/services/asset\n-> drone service dex\n        Downloading template....\n        Copying template....\n        Done! asset service path /path/to/muta-tutorial-dex/services/dex\n`}</code></pre>\n    <p>{`Service 工程目录如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`./asset\n├── Cargo.toml\n├── rust-toolchain\n└── src\n    ├── lib.rs\n    └── types.rs\n\n./dex\n├── Cargo.toml\n├── rust-toolchain\n└── src\n    ├── lib.rs\n    └── types.rs\n`}</code></pre>\n    <p>{`可以看到 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/nervosnetwork/muta-template/blob/master/service-template/src/lib.rs\"\n      }}>{`lib.rs`}</a>{` 和 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/nervosnetwork/muta-template/blob/master/service-template/src/types.rs\"\n      }}>{`types.rs`}</a>{` 默认帮我们实现了一个简单的读写 key-value 的 service。`}</p>\n    <h3 {...{\n      \"id\": \"编写-asset-service\"\n    }}>{`编写 Asset Service`}</h3>\n    <p>{`学习完 `}<a parentName=\"p\" {...{\n        \"href\": \"/muta-docs2/docs/service_dev\"\n      }}>{`Service 开发指南`}</a>{`，相信读者对如何开发 asset service 已经有了一定的想法，并且能够阅读 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mkxbl/muta-tutorial-dex/tree/master/services/asset\"\n      }}>{`asset service`}</a>{` 源码。这里就不复述相关内容，仅向读者说明一些需要注意的地方：`}</p>\n    <h4 {...{\n      \"id\": \"代码结构\"\n    }}>{`代码结构`}</h4>\n    <p>{`Service 的组件定义在 lib.rs 中，组件需要用到的数据结构，如输入输出参数(`}<inlineCode parentName=\"p\">{`TransferPayload`}</inlineCode>{`)、事件类型(`}<inlineCode parentName=\"p\">{`TransferEvent`}</inlineCode>{`)、存储类型(`}<inlineCode parentName=\"p\">{`Asset`}</inlineCode>{`)定义在 types.rs 中。`}</p>\n    <h4 {...{\n      \"id\": \"创世配置\"\n    }}>{`创世配置`}</h4>\n    <p>{`Asset Service 通过 `}<inlineCode parentName=\"p\">{`fn init_genesis`}</inlineCode>{` 方法，注册了 Muta Tutorial Token，该 token 信息将包含在创世块的世界状态里：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`// lib.rs\n#[genesis]\nfn init_genesis(&mut self, payload: InitGenesisPayload) -> ProtocolResult<()> {\n    let asset = Asset {\n        id: payload.id,\n        name: payload.name,\n        symbol: payload.symbol,\n        supply: payload.supply,\n        issuer: payload.issuer.clone(),\n    };\n\n    self.assets.insert(asset.id.clone(), asset.clone())?;\n\n    let balance = Balance {\n        current: payload.supply,\n        locked: 0,\n    };\n\n    self.sdk.set_account_value(&asset.issuer, asset.id, balance)\n}\n\n// types.rs\n#[derive(Deserialize, Serialize, Clone, Debug)]\npub struct InitGenesisPayload {\n    pub id: Hash,\n    pub name: String,\n    pub symbol: String,\n    pub supply: u64,\n    pub issuer: Address,\n}\n`}</code></pre>\n    <p>{`该方法的输入参数 `}<inlineCode parentName=\"p\">{`InitGenesisPayload`}</inlineCode>{`，定义在 muta-tutorial-dex/config/genesis.toml 文件中，该文件包含所有 service 的创世配置信息：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-toml\"\n      }}>{`# config/genesis.toml\n[[services]]\nname = \"asset\"\npayload = '''\n{\n    \"id\": \"0xf56924db538e77bb5951eb5ff0d02b88983c49c45eea30e8ae3e7234b311436c\",\n    \"name\": \"Muta Tutorial Token\",\n    \"symbol\": \"MTT\",\n    \"supply\": 1000000000,\n    \"issuer\": \"0xf8389d774afdad8755ef8e629e5a154fddc6325a\"\n}\n'''\n`}</code></pre>\n    <p>{`框架在创建创世块时，会读取该配置并调用 `}<inlineCode parentName=\"p\">{`fn init_genesis`}</inlineCode>{` 方法。`}</p>\n    <h4 {...{\n      \"id\": \"接口权限\"\n    }}>{`接口权限`}</h4>\n    <p>{`Asset Service 的 `}<inlineCode parentName=\"p\">{`fn lock`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`fn unlock`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`fn add_value`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`fn sub_value`}</inlineCode>{` 接口方法，只能被 Dex Service 调用，无法被用户直接调用。在 Asset Service 中定义了 `}<inlineCode parentName=\"p\">{`ADMISSION_TOKEN`}</inlineCode>{`，通过检验在 `}<inlineCode parentName=\"p\">{`ServiceContext`}</inlineCode>{` 中的 `}<inlineCode parentName=\"p\">{`extra`}</inlineCode>{` 字段是否包含该令牌进行权限控制。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`const ADMISSION_TOKEN: Bytes = Bytes::from_static(b\"dex_token\");\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`注意：由于框架正在持续的开发过程中，所以未来对调用的权限控制机制可能会修改`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"编写-dex-service\"\n    }}>{`编写 Dex Service`}</h3>\n    <p>{`Dex Service 源码可以在 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mkxbl/muta-tutorial-dex/tree/master/services/dex\"\n      }}>{`这里`}</a>{` 找到，注意事项同上。`}</p>\n    <h2 {...{\n      \"id\": \"3-将-service-接入框架，编译运行！\"\n    }}>{`3. 将 Service 接入框架，编译运行！`}</h2>\n    <p>{`前面已经提到，这部分工作将在 src 目录的 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/nervosnetwork/muta-template/blob/master/node-template/src/main.rs\"\n      }}>{`main`}</a>{` 文件中完成。脚手架下载的 main 文件已经帮我们实现了绝大部分代码，所以这部分工作将变得非常简单。`}</p>\n    <p>{`在模版代码中，定义了一个 `}<inlineCode parentName=\"p\">{`struct DefaultServiceMapping`}</inlineCode>{` 结构体，并为该结构体实现了 `}<inlineCode parentName=\"p\">{`trait ServiceMapping`}</inlineCode>{`，框架通过 `}<inlineCode parentName=\"p\">{`trait ServiceMapping`}</inlineCode>{` 可以获取到所有 service 实例，从而将开发者定义的 service 接入框架底层组件。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`struct DefaultServiceMapping;\n\nimpl ServiceMapping for DefaultServiceMapping {\n    fn get_service<SDK: 'static + ServiceSDK>(\n        &self,\n        name: &str,\n        sdk: SDK,\n    ) -> ProtocolResult<Box<dyn Service>> {\n        let service = match name {\n            \"asset\" => Box::new(asset::AssetService::new(sdk)?) as Box<dyn Service>,\n            \"metadata\" => Box::new(metadata::MetadataService::new(sdk)?) as Box<dyn Service>,\n            _ => {\n                return Err(MappingError::NotFoundService {\n                    service: name.to_owned(),\n                }\n                .into())\n            }\n        };\n\n        Ok(service)\n    }\n\n    fn list_service_name(&self) -> Vec<String> {\n        vec![\"asset\".to_owned(), \"metadata\".to_owned()]\n    }\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`trait ServiceMapping`}</inlineCode>{` 包含两个方法，一个 `}<inlineCode parentName=\"p\">{`fn get_service`}</inlineCode>{` 用来根据 service 名称获取 service 实例，另一个 `}<inlineCode parentName=\"p\">{`fn list_service_name`}</inlineCode>{` 用来获取所有 service 名称。`}</p>\n    <p>{`需要注意的是，框架将使用在 `}<inlineCode parentName=\"p\">{`fn list_service_name`}</inlineCode>{` 方法中 service 名称排列的顺序，依次调用 service 中 `}<inlineCode parentName=\"p\">{`#[genesis]`}</inlineCode>{` 或 `}<inlineCode parentName=\"p\">{`#[hook_before]`}</inlineCode>{` 或 `}<inlineCode parentName=\"p\">{`#[hook_after]`}</inlineCode>{` 标记的方法。`}</p>\n    <p>{`我们需要做的，仅仅是把 `}<inlineCode parentName=\"p\">{`fn get_service`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`fn list_service_name`}</inlineCode>{` 方法中的 service 集合，替换成我们 services 目录中包含的 service 集合：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`struct DefaultServiceMapping;\n\nimpl ServiceMapping for DefaultServiceMapping {\n    fn get_service<SDK: 'static + ServiceSDK>(\n        &self,\n        name: &str,\n        sdk: SDK,\n    ) -> ProtocolResult<Box<dyn Service>> {\n        let service = match name {\n            \"metadata\" => Box::new(metadata::MetadataService::new(sdk)?) as Box<dyn Service>,\n            \"asset\" => Box::new(asset::AssetService::new(sdk)?) as Box<dyn Service>,\n            \"dex\" => Box::new(dex::DexService::new(sdk)?) as Box<dyn Service>,\n            _ => {\n                return Err(MappingError::NotFoundService {\n                    service: name.to_owned(),\n                }\n                .into())\n            }\n        };\n\n        Ok(service)\n    }\n\n    fn list_service_name(&self) -> Vec<String> {\n        vec![\"metadata\".to_owned(), \"asset\".to_owned(), \"dex\".to_owned()]\n    }\n}\n`}</code></pre>\n    <p>{`到这里，所有的开发工作就完成了，运行 `}<inlineCode parentName=\"p\">{`cargo run`}</inlineCode>{` 编译并启动 dex 链。`}</p>\n    <p>{`通过浏览器打开 http://localhost:8000/graphiql ，即可与 dex 链进行交互，graphiql 的使用方法参见`}<a parentName=\"p\" {...{\n        \"href\": \"/muta-docs2/docs/graphql\"\n      }}>{`文档`}</a>{`。`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`注意：由于框架正在持续的开发过程中，所以框架的 api 有可能发生变动`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}