{"remainingRequest":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/mdx-loader/src/index.js??ref--7-2!/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--7-3!/Users/Yun/Desktop/docs2/muta-docs2/docs/docs_zh/network.md","dependencies":[{"path":"/Users/Yun/Desktop/docs2/muta-docs2/docs/docs_zh/network.md","mtime":1592902504771},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/.docusaurus/docusaurus-plugin-content-docs/site-docs-docs-zh-network-md-2bc.json","mtime":1592902686127},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/Yun/Desktop/docs2/muta-docs2/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Yun/Desktop/docs2/muta-docs2/docs/docs_zh/network.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","value","children","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'network',\n\ttitle: '网络设计'\n};\nexport const metadata = {\n  \"id\": \"docs_zh/network\",\n  \"title\": \"网络设计\",\n  \"description\": \"## 当前目标\",\n  \"source\": \"@site/docs/docs_zh/network.md\",\n  \"permalink\": \"/muta-docs2/docs/docs_zh/network\",\n  \"editUrl\": \"https://github.com/nervosnetwork/muta-docs/docs/docs_zh/network.md\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Overlord 架构设计\",\n    \"permalink\": \"/muta-docs2/docs/docs_zh/overlord\"\n  },\n  \"next\": {\n    \"title\": \"存储设计\",\n    \"permalink\": \"/muta-docs2/docs/docs_zh/storage\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: '当前目标',\n  id: '当前目标',\n  children: []\n}, {\n  value: '消息收发',\n  id: '消息收发',\n  children: [{\n    value: '节点消息端 (Endpoint)',\n    id: '节点消息端-endpoint',\n    children: []\n  }, {\n    value: '消息序列化',\n    id: '消息序列化',\n    children: []\n  }, {\n    value: '消息处理',\n    id: '消息处理',\n    children: []\n  }, {\n    value: '消息处理逻辑注册',\n    id: '消息处理逻辑注册',\n    children: []\n  }, {\n    value: '消息的发送',\n    id: '消息的发送',\n    children: []\n  }]\n}];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"当前目标\"\n    }}>{`当前目标`}</h2>\n    <p>{`基于 `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/nervosnetwork/p2p\"\n      }}>{`tentacle crate`}</a>{` 实现一个简单的可工作的 P2P 网络，主要功能如下：`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`节点身份`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`PeerID: secp256k1 的公钥派生出的 ID，`}<a parentName=\"li\" {...{\n              \"href\": \"https://crates.io/crates/tentacle-secio\"\n            }}>{`tentacle-secio`}</a></li>\n          <li parentName=\"ul\">{`Address: MultiAddress `}<a parentName=\"li\" {...{\n              \"href\": \"https://multiformats.io/multiaddr\"\n            }}>{`REF`}</a>{`，只支持 TCP`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`节点发现`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`bootstrap，`}<a parentName=\"li\" {...{\n              \"href\": \"https://crates.io/crates/tentacle-discovery\"\n            }}>{`tentacle-discovery`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`节点质量维护`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`ping，`}<a parentName=\"li\" {...{\n              \"href\": \"https://crates.io/crates/tentacle-ping\"\n            }}>{`tentacle-ping`}</a>{`，超时断开`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`节点持久化`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`基于文件的简易持久化，服务退出时，将保存节点信息，默认关闭`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`消息广播以及单播`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`基础的广播服务，以及基于 secp256k1 公钥地址的单播`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`消息加密传输`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`基于 `}<a parentName=\"li\" {...{\n              \"href\": \"https://crates.io/crates/tentacle-secio\"\n            }}>{`tentacle-secio`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`其他`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`消息优先级: 使用 tentacle 自带的消息发送优先级，目前只有两种，High 和 Normal`}</li>\n          <li parentName=\"ul\">{`消息压缩: 使用 snappy`}</li>\n          <li parentName=\"ul\">{`消息处理: 基于 handler 注册形式，由各个模块自定义接受消息处理逻辑`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"消息收发\"\n    }}>{`消息收发`}</h2>\n    <h3 {...{\n      \"id\": \"节点消息端-endpoint\"\n    }}>{`节点消息端 (Endpoint)`}</h3>\n    <p>{`节点通过注册消息端地址对外暴露服务，实现消息接受及处理。目前提供三种类型的地址：`}</p>\n    <h4 {...{\n      \"id\": \"gossip\"\n    }}>{`Gossip`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`/gossip/[service_name]/[message_name]\n`}</code></pre>\n    <p>{`消息单向广播以及单播`}</p>\n    <h4 {...{\n      \"id\": \"rpc-call\"\n    }}>{`RPC Call`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`/rpc_call/[service_name]/[message_name]\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"rpc-response\"\n    }}>{`RPC Response`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`/rpc_resp/[service_name]/[message_name]\n`}</code></pre>\n    <p>{`RPC 用于节点之间的消息交互通信，RPC Call 发送请求，RPC Response 返回。`}</p>\n    <h3 {...{\n      \"id\": \"消息序列化\"\n    }}>{`消息序列化`}</h3>\n    <p>{`序列化采用 protobuf ，消息需要实现 MessageCodec trait 。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`#[async_trait]\npub trait MessageCodec: Sized + Send + Debug + 'static {\n    async fn encode(&mut self) -> ProtocolResult<Bytes>;\n\n    async fn decode(bytes: Bytes) -> ProtocolResult<Self>;\n}\n`}</code></pre>\n    <p>{`目前针对实现了 serde Serialize 和 Deserialize trait 的消息自动实现了 MessageCodec ，\n采用 bincode 作为中间序列化过渡。`}</p>\n    <h3 {...{\n      \"id\": \"消息处理\"\n    }}>{`消息处理`}</h3>\n    <p>{`消息处理需要实现 MessageHandler trait`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`#[async_trait]\npub trait MessageHandler: Sync + Send + 'static {\n    type Message: MessageCodec;\n\n    async fn process(&self, ctx: Context, msg: Self::Message) -> ProtocolResult<()>;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"消息处理逻辑注册\"\n    }}>{`消息处理逻辑注册`}</h3>\n    <p>{`完成上述实现之后，可通过如下接口，完成消息逻辑处理的注册。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`pub fn register_endpoint_handler<M>(\n    &mut self,\n    end: &str,\n    handler: Box<dyn MessageHandler<Message = M>>,\n) -> ProtocolResult<()>\nwhere\n    M: MessageCodec;\n\npub fn register_rpc_response<M>(&mut self, end: &str) -> ProtocolResult<()>\nwhere\n    M: MessageCodec;\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Gossip`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`RPC Call`}</inlineCode>{` 都需要通过 `}<inlineCode parentName=\"p\">{`register_endpoint_handler`}</inlineCode>{` 完成注册，\n而 `}<inlineCode parentName=\"p\">{`RPC Response`}</inlineCode>{` 需要通过 `}<inlineCode parentName=\"p\">{`register_rpc_response`}</inlineCode>{` 完成注册。`}</p>\n    <p>{`未来计划将 `}<inlineCode parentName=\"p\">{`RPC Response`}</inlineCode>{` 注册去掉。`}</p>\n    <p><inlineCode parentName=\"p\">{`end`}</inlineCode>{` 即签名提到的节点消息端 `}<inlineCode parentName=\"p\">{`Endpoint`}</inlineCode>{` 缩写。`}</p>\n    <h3 {...{\n      \"id\": \"消息的发送\"\n    }}>{`消息的发送`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-rust\"\n      }}>{`#[async_trait]\npub trait Gossip: Send + Sync {\n    async fn broadcast<M>(&self, cx: Context, end: &str, msg: M, p: Priority) -> ProtocolResult<()>\n    where\n        M: MessageCodec;\n\n    async fn users_cast<M>(\n        &self,\n        cx: Context,\n        end: &str,\n        users: Vec<UserAddress>,\n        msg: M,\n        p: Priority,\n    ) -> ProtocolResult<()>\n    where\n        M: MessageCodec;\n}\n\n#[async_trait]\npub trait Rpc: Send + Sync {\n    async fn call<M, R>(&self, ctx: Context, end: &str, msg: M, pri: Priority) -> ProtocolResult<R>\n    where\n        M: MessageCodec,\n        R: MessageCodec;\n\n    async fn response<M>(&self, cx: Context, end: &str, msg: M, p: Priority) -> ProtocolResult<()>\n    where\n        M: MessageCodec;\n}\n`}</code></pre>\n    <p>{`如上述定义，网路服务实例化后，可通过调用 `}<inlineCode parentName=\"p\">{`handle()`}</inlineCode>{` 获取一个网络服务引用，该\n`}<inlineCode parentName=\"p\">{`handle`}</inlineCode>{` 实现了上述的接口，同时实现了 `}<inlineCode parentName=\"p\">{`Clone`}</inlineCode>{`。各模块可以通过它来完成消息的\n发送。`}</p>\n    <p>{`注意：`}<inlineCode parentName=\"p\">{`UserAddress`}</inlineCode>{` 目前同 `}<inlineCode parentName=\"p\">{`tentacle-secio`}</inlineCode>{` 提供的 secp256k1 公钥绑定。`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}