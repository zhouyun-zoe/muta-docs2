(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{170:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return d})),a.d(t,"default",(function(){return p}));var n=a(1),r=a(9),c=(a(0),a(196)),o={id:"private-key",title:"Generate Keypairs"},i={id:"tutorial/private-network/private-key",title:"Generate Keypairs",description:"Each person who wants to participate in the blockchain should generate their own keys. So, the first step of this tutorial is to teach you how to use tool to generate your own key-pairs, and please recording the output carefully, especially the private key.",source:"@site/docs/tutorial/private-network/private-key.md",permalink:"/muta-docs2/docs/tutorial/private-network/private-key",editUrl:"https://github.com/nervosnetwork/muta-docs/docs/tutorial/private-network/private-key.md",sidebar:"tutorial",previous:{title:"Before We Start the Tutorial",permalink:"/muta-docs2/docs/tutorial/private-network/private-before"},next:{title:"Create the Genesis Block",permalink:"/muta-docs2/docs/tutorial/private-network/private-genesis"}},d=[{value:"Step 1: install Muta-keypair",id:"step-1-install-muta-keypair",children:[]},{value:"Generate Key-pairs",id:"generate-key-pairs",children:[]}],b={rightToc:d};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Each person who wants to participate in the blockchain should generate their own keys. So, the first step of this tutorial is to teach you how to use tool to generate your own key-pairs, and please recording the output carefully, especially the private key."),Object(c.b)("h2",{id:"step-1-install-muta-keypair"},"Step 1: install Muta-keypair"),Object(c.b)("p",null,"Muta-keypair is a tool the generates keys specifically designed to be used with Muta. Install it by following command:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{}),"cargo +nightly install --git https://github.com/nervosnetwork/muta.git --bin muta-keypair\n")),Object(c.b)("p",null,"Run the help command\uff0cthen you can see the operation guide:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{}),"$ muta-keypair -h\nmuta_keypair 0.1\nMuta Dev <muta@nervos.org>\na tool to generate keypairs for muta\n\nUSAGE:\n    muta-keypair [OPTIONS]\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nOPTIONS:\n    -c, --common_ref <common_ref>           common_ref for bls signature, it will be randomly generated if not passed\n                                            [default: ]\n    -n, --number <number>                   Number of keypairs to generate [default: 4]\n    -p, --private_keys <private_keys>...    Generate keypairs from a given private key vector\n")),Object(c.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(c.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(c.b)("h5",{parentName:"div"},Object(c.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(c.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(c.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(c.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(c.b)("p",{parentName:"div"},Object(c.b)("inlineCode",{parentName:"p"},"common_ref")," is a required parameter used when generating BLS signature. And all the validators in a same network should share a common ",Object(c.b)("inlineCode",{parentName:"p"},"common_ref"),". So, in here, one option is to let ",Object(c.b)("inlineCode",{parentName:"p"},"bootstraps node")," generating ",Object(c.b)("inlineCode",{parentName:"p"},"common_ref")," first, and then distribute it to the other node. Another option for validators is to consult together to come up with a string used as ",Object(c.b)("inlineCode",{parentName:"p"},"common_ref")," after hex encoding. "))),Object(c.b)("p",null,"In this case, bootstraps node will generate a ",Object(c.b)("inlineCode",{parentName:"p"},"common_ref")," randomly, and then pass it to the other node."),Object(c.b)("h2",{id:"generate-key-pairs"},"Generate Key-pairs"),Object(c.b)("p",null,"Alice (bootstraps node) generates her key-pairs:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{}),'$ muta-keypair -n 1\n{\n  "common_ref": "0x7446645045376b553041",\n  "keypairs": [\n    {\n      "index": 1,\n      "private_key": "0x5b2041e3f47aaf2d44407d3bdf415a4f55bf377352448c4217393f5c34fe270d",\n      "public_key": "0x0299b6d1ad1961cf7a99b581d103a9f977531f77d67e994bfcd9a7fd82ad230a49",\n      "address": "0x991ce94e75332da2160363d78b73955738d7a3bc",\n      "bls_public_key": "0x04076b9ee33b9ef2c5f6f7bf8507dd2e17c65f8b67bee2ca874dde747ef69d7f18ec927de1adca930da61b071d6075ea10172342d0fb50b977b919ab0e4e8306261002b1ed27990b9d6dded5583b91d8801615baee901ed09a2333fc57770d84c8"\n    }\n  ]\n}\n')),Object(c.b)("p",null,"After Alice passes the ",Object(c.b)("inlineCode",{parentName:"p"},"common_ref")," to Bob, Bill and Ben, they generates his own key-pairs:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{}),'$ muta-keypair -n 3 -c 75695962523835457669\n{\n  "common_ref": "0x75695962523835457669",\n  "keypairs": [\n    {\n      "index": 1,\n      "private_key": "0x28f53779b60e261ba68cdccefcc6a152136df8cb794e067ec76dc5a02c8f2ccf",\n      "public_key": "0x0299b6d1ad1961cf7a99b581d103a9f977531f77d67e994bfcd9a7fd82ad230a49",\n      "address": "0x78ef0eff2fb9f569d86d75d22b69ea8407f6f092",\n      "bls_public_key": "0x0413584a15f1dec552bb12233bf73a886ed49a3f56c68eda080743577005417635c9ac72a528a961a0e14a2df3a50a5c660641f446f629788486d7935d4ad4918035ce884a98bbaaa4c96307a2428729cba694329a693ce60c02e13b039c6a8978"\n    },\n    {\n      "index": 2,\n      "private_key": "0x8b41630934fc7df92a016af88aae477bd173118fb72113f31db8a950230b029f",\n      "public_key": "0x030a1cd0213b86976c9e14c1aa8d0167a50c8a5c929f72fcbeaae35d84afa1c2b7",\n      "address": "0xa55e1261a73116c755291140e427caa0cbb5309e",\n      "bls_public_key": "0x040e7b00b59d37d4d735041ea1b69a55cd7fd80e920b5d70d85d051af6b847c3aec5b412b128f85ad8b4c6bac0561105a80fa8dd5f60cd42c3a2da0fd0b946fa3d761b1d21c569e0958b847da22dec14a132121027006df8c5d4ccf7caf8535f70"\n    },\n    {\n      "index": 3,\n      "private_key": "0x8e065679aa8b1185406c7514343073cd8c1695218925c9b2d5e98c3483d71d81",\n      "public_key": "0x027c805020b226a050c317c68d50cb7b0a7d682b5614e23a61c5c08a722c2d44aa",\n      "address": "0x103252cad4e0380fe57a0c73f549f1ee2c9ea8e8",\n      "bls_public_key": "0x041611b7da94a7fb7a8ff1c802bbf61da689f8d6f974d99466adeb1f47bcaff70470b6f279763abeb0cec5565abcfcb4ce13e79b8c310f0d1b26605b61ac2c04e0efcedbae18e763a86adb7a0e8ed0fcb1dc11fded12583972403815a7aa3dc300"\n    }\n  ]\n}\n')),Object(c.b)("p",null,"From the output we can see, each participant not only has their own keys generated\uff0cbut also possessed their ",Object(c.b)("inlineCode",{parentName:"p"},"bls_public_key"),". Reocord all of these information carellful, we will use it in following steps."))}p.isMDXComponent=!0},196:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):i({},t,{},e)),a},l=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},f=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,b=d(e,["components","mdxType","originalType","parentName"]),l=p(a),f=n,u=l["".concat(o,".").concat(f)]||l[f]||s[f]||c;return a?r.a.createElement(u,i({ref:t},b,{components:a})):r.a.createElement(u,i({ref:t},b))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=f;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var b=2;b<c;b++)o[b]=a[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}f.displayName="MDXCreateElement"}}]);